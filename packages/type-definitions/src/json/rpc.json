{
    "oracle": {
        "getValue": {
            "description": "Retrieves the oracle value for a given key.",
            "params": [
                {
                    "name": "providerId",
                    "type": "RpcDataProviderId"
                },
                {
                    "name": "key",
                    "type": "OracleKey"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Option<TimestampedValue>",
            "isSubscription": false,
            "jsonrpc": "oracle_getValue",
            "method": "getValue",
            "section": "oracle"
        },
        "getAllValues": {
            "description": "Retrieves all oracle values.",
            "params": [
                {
                    "name": "providerId",
                    "type": "RpcDataProviderId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Vec<(OracleKey, Option<TimestampedValue>)>",
            "isSubscription": false,
            "jsonrpc": "oracle_getAllValues",
            "method": "getAllValues",
            "section": "oracle"
        }
    },
    "flexibleFee": {
        "getFeeTokenAndAmount": {
            "description": "Get charging token type and amount in terms of flexible transaction fee.",
            "params": [
                {
                    "name": "who",
                    "type": "AccountId"
                },
                {
                    "name": "extrinsic",
                    "type": "Bytes"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "(CurrencyId, NumberOrHex)",
            "isSubscription": false,
            "jsonrpc": "flexibleFee_getFeeTokenAndAmount",
            "method": "getFeeTokenAndAmount",
            "section": "flexibleFee"
        }
    },
    "salp": {
        "getContribution": {
            "description": "salp getContribution",
            "params": [
                {
                    "name": "index",
                    "type": "ParaId"
                },
                {
                    "name": "who",
                    "type": "AccountIdOf"
                }
            ],
            "type": "(Balance, ContributionStatus)",
            "isSubscription": false,
            "jsonrpc": "salp_getContribution",
            "method": "getContribution",
            "section": "salp"
        }
    },
    "vtokenMint": {
        "getVtokenMintRate": {
            "description": "Get current vtoken mint rate.",
            "params": [
                {
                    "name": "asset_id",
                    "type": "CurrencyId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "String",
            "isSubscription": false,
            "jsonrpc": "vtokenMint_getVtokenMintRate",
            "method": "getVtokenMintRate",
            "section": "vtokenMint"
        }
    },
    "zenlinkProtocol": {
        "getAllAssets": {
            "description": "zenlinkProtocol getAllAssets",
            "params": [
                {
                    "name": "at",
                    "type": "Hash",
                    "isOptional": true
                }
            ],
            "type": "Vec<ZenlinkAssetId>",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getAllAssets",
            "method": "getAllAssets",
            "section": "zenlinkProtocol"
        },
        "getBalance": {
            "description": "zenlinkProtocol getBalance",
            "params": [
                {
                    "name": "asset_id",
                    "type": "ZenlinkAssetId"
                },
                {
                    "name": "account",
                    "type": "AccountId"
                },
                {
                    "name": "at",
                    "type": "Hash",
                    "isOptional": true
                }
            ],
            "type": "String",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getBalance",
            "method": "getBalance",
            "section": "zenlinkProtocol"
        },
        "getSovereignsInfo": {
            "description": "Get the ownership of a certain currency for each parachain.",
            "params": [
                {
                    "name": "asset_id",
                    "type": "ZenlinkAssetId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "(u32, AccountId, String)",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getSovereignsInfo",
            "method": "getSovereignsInfo",
            "section": "zenlinkProtocol"
        },
        "getAllPairs": {
            "description": "Get the information of all the exchange pairs.",
            "params": [
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Vec<PairInfo>",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getAllPairs",
            "method": "getAllPairs",
            "section": "zenlinkProtocol"
        },
        "getOwnerPairs": {
            "description": "Get ownership of all exchange pairs for a particular account.",
            "params": [
                {
                    "name": "owner",
                    "type": "AccountId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Vec<PairInfo>",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getOwnerPairs",
            "method": "getOwnerPairs",
            "section": "zenlinkProtocol"
        },
        "getPairByAssetId": {
            "description": "Get the detailed information of a particular exchange pair.",
            "params": [
                {
                    "name": "asset_0",
                    "type": "ZenlinkAssetId"
                },
                {
                    "name": "asset_1",
                    "type": "ZenlinkAssetId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "PairInfo",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getPairByAssetId",
            "method": "getPairByAssetId",
            "section": "zenlinkProtocol"
        },
        "getAmountInPrice": {
            "description": "Get the output token amount for an exact input token amount.",
            "params": [
                {
                    "name": "supply",
                    "type": "ZenlinkAssetBalance"
                },
                {
                    "name": "path",
                    "type": "Vec<ZenlinkAssetId>"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "u128",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getAmountInPrice",
            "method": "getAmountInPrice",
            "section": "zenlinkProtocol"
        },
        "getAmountOutPrice": {
            "description": "Get the input token amount for an exact output token amount.",
            "params": [
                {
                    "name": "supply",
                    "type": "ZenlinkAssetBalance"
                },
                {
                    "name": "path",
                    "type": "Vec<ZenlinkAssetId>"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "u128",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getAmountOutPrice",
            "method": "getAmountOutPrice",
            "section": "zenlinkProtocol"
        },
        "getEstimateLptoken": {
            "description": "Get the estimated number of LP token acquired given the desired and minimum amount for both in-token and out-token.",
            "params": [
                {
                    "name": "asset_0",
                    "type": "ZenlinkAssetId"
                },
                {
                    "name": "asset_1",
                    "type": "ZenlinkAssetId"
                },
                {
                    "name": "amount_0_desired",
                    "type": "ZenlinkAssetBalance"
                },
                {
                    "name": "amount_1_desired",
                    "type": "ZenlinkAssetBalance"
                },
                {
                    "name": "amount_0_min",
                    "type": "ZenlinkAssetBalance"
                },
                {
                    "name": "amount_1_min",
                    "type": "ZenlinkAssetBalance"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "u128",
            "isSubscription": false,
            "jsonrpc": "zenlinkProtocol_getEstimateLptoken",
            "method": "getEstimateLptoken",
            "section": "zenlinkProtocol"
        }
    },
    "liquidityMining": {
        "getRewards": {
            "description": "Get the rewards users deserve",
            "params": [
                {
                    "name": "who",
                    "type": "AccountId"
                },
                {
                    "name": "pid",
                    "type": "PoolId"
                },
                {
                    "name": "at",
                    "type": "Hash",
                    "isOptional": true
                }
            ],
            "type": "Vec<(CurrencyId, Balance)>",
            "isSubscription": false,
            "jsonrpc": "liquidityMining_getRewards",
            "method": "getRewards",
            "section": "liquidityMining"
        }
    }
}